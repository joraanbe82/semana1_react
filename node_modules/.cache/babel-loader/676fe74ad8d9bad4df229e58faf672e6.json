{"ast":null,"code":"import \"./App.css\"; // import Main from \"./components/Main\";\n\n// ************ CON FUNCIONES ************\n// const App: React.FC = () => {\n//   //tambien se podria definir : IUser[] =\n//   //Si queremos añadir cualquier otra propiedad aparte de las definidas pondriamos\n//   //Array<IUser & any?\n//   const users: Array<IUser>  = [\n//     {\n//       name: \"Darth Vader\",\n//       text:\n//         \"Habrá una recompensa sustancial para aquel que encuentre el Halcón Milenario.\",\n//       imageUrl:\n//         \"https://i.pinimg.com/originals/7e/5e/10/7e5e10fab07737024c913ba93d1b2651.png\"\n//     },\n//     {\n//       name: \"Darthy Boop\",\n//       text: \"booobooobooooo\",\n//       imageUrl: \"https://image.flaticon.com/icons/png/512/39/39797.png\"\n//     }\n//   ];\n//   return (\n//     <div className=\"App\">\n//       <header>Mi header</header>\n//       <Main color=\"orange\" text=\"hay texto\" />\n//       <Main color=\"blue\" />\n//       <div className=\"container\">\n//         <div className=\"row\">\n//           {users.map(user => (   //Ponemos una key (única) en el primer elemento que se va a crear\n//             <div key={user.name} className=\"col-6\">\n//               <CardClass\n//                 imageUrl={user.imageUrl}\n//                 name={user.name}\n//                 text={user.text}\n//               />\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//       <footer>Mi footer</footer>\n//     </div>\n//   );\n// };\n// *********** CON CLASES **************\n// const users: Array<IUser> = [\n//   {\n//     name: \"Peter\",\n//     text: \"Description\",\n//     imageUrl: \"https://www.pngarts.com/files/3/Boy-Avatar-PNG-Photo.png\"\n//   },\n//   {\n//     name: \"John\",\n//     text: \"Description\",\n//     imageUrl:\n//       \"https://www.pngarts.com/files/3/Cool-Avatar-Transparent-Image.png\"\n//   },\n//   {\n//     name: \"Steve\",\n//     text: \"Description\",\n//     imageUrl: \"https://pickaface.net/assets/images/slides/slide2.png\"\n//   }\n// ];\n// interface IState {\n//   showLastCard: boolean;\n//   showFirstCard: boolean;\n// }\n// class App extends React.Component<{}, IState> {\n//   constructor(props: any) {\n//     super(props); //Super llama al constructor de la clase que extiende\n//     //Y aquí debajo hago mis cosas\n//     this.state = {\n//       showFirstCard: true,\n//       showLastCard: true\n//     };\n//     this.clickOnButton = this.clickOnButton.bind(this);\n//     this.clickOnButton2 = this.clickOnButton2.bind(this);\n//   }\n//   clickOnButton() {\n//     this.setState({ showFirstCard: !this.state.showFirstCard });\n//   }\n//   clickOnButton2() {\n//     this.setState({ showLastCard: !this.state.showLastCard });\n//   }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header>Mi header</header>\n//         {/* <Main color=\"orange\" text=\"hay texto\" />\n//         <Main color=\"blue\" /> */}\n//         <input\n//           className=\"btn btn-danger m-2\"\n//           type=\"button\"\n//           value=\"Hidden/Show First Card\"\n//           onClick={this.clickOnButton2}\n//         />\n//         <input\n//           className=\"btn btn-danger m-2\"\n//           type=\"button\"\n//           value=\"Hidden/Show Last Card\"\n//           onClick={this.clickOnButton}\n//         />\n//         <div className=\"container\">\n//           <div className=\"row\">\n//             {users.map((user, i) => {\n//               if (i === users.length - 1 && !this.state.showLastCard) {\n//                 return null;\n//               }\n//               if (i === 0 && !this.state.showFirstCard) {\n//                 return null;\n//               }\n//               return (\n//                 <CardClass\n//                   key={user.name}\n//                   imageUrl={user.imageUrl}\n//                   name={user.name}\n//                   text={user.text}\n//                   remove={() => {\n//                     if (i === 0) {\n//                       this.setState({ showFirstCard: false });\n//                     }\n//                     if (i === users.length - 1) {\n//                       this.setState({ showLastCard: false });\n//                     }\n//                   }}\n//                 />\n//               );\n//             })}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\nexport default App;","map":{"version":3,"sources":["C:\\Users\\A103\\Google Drive\\REACT\\pruebareact\\src\\App.tsx"],"names":["App"],"mappings":"AACA,OAAO,WAAP,C,CACA;;AAaeAAeA,GAAf","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n// import Main from \"./components/Main\";\r\nimport Card from \"./components/Card\"; //Componente con función\r\nimport CardClass from \"./classComponents/CardClass\"; //Componente con clases\r\n\r\n//Le damos un tipado a las propiedades para restringuir el uso\r\ninterface IUser {\r\n  name: string;\r\n  text: string;\r\n  imageUrl: string;\r\n}\r\n\r\n\r\n\r\n// ************ CON FUNCIONES ************\r\n\r\n// const App: React.FC = () => {\r\n\r\n//   //tambien se podria definir : IUser[] =\r\n//   //Si queremos añadir cualquier otra propiedad aparte de las definidas pondriamos\r\n//   //Array<IUser & any?\r\n//   const users: Array<IUser>  = [\r\n//     {\r\n//       name: \"Darth Vader\",\r\n//       text:\r\n//         \"Habrá una recompensa sustancial para aquel que encuentre el Halcón Milenario.\",\r\n//       imageUrl:\r\n//         \"https://i.pinimg.com/originals/7e/5e/10/7e5e10fab07737024c913ba93d1b2651.png\"\r\n//     },\r\n//     {\r\n//       name: \"Darthy Boop\",\r\n//       text: \"booobooobooooo\",\r\n//       imageUrl: \"https://image.flaticon.com/icons/png/512/39/39797.png\"\r\n//     }\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header>Mi header</header>\r\n//       <Main color=\"orange\" text=\"hay texto\" />\r\n//       <Main color=\"blue\" />\r\n\r\n//       <div className=\"container\">\r\n//         <div className=\"row\">\r\n//           {users.map(user => (   //Ponemos una key (única) en el primer elemento que se va a crear\r\n//             <div key={user.name} className=\"col-6\">\r\n//               <CardClass\r\n//                 imageUrl={user.imageUrl}\r\n//                 name={user.name}\r\n//                 text={user.text}\r\n//               />\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n\r\n//       <footer>Mi footer</footer>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// *********** CON CLASES **************\r\n\r\n// const users: Array<IUser> = [\r\n//   {\r\n//     name: \"Peter\",\r\n//     text: \"Description\",\r\n//     imageUrl: \"https://www.pngarts.com/files/3/Boy-Avatar-PNG-Photo.png\"\r\n//   },\r\n//   {\r\n//     name: \"John\",\r\n//     text: \"Description\",\r\n//     imageUrl:\r\n//       \"https://www.pngarts.com/files/3/Cool-Avatar-Transparent-Image.png\"\r\n//   },\r\n//   {\r\n//     name: \"Steve\",\r\n//     text: \"Description\",\r\n//     imageUrl: \"https://pickaface.net/assets/images/slides/slide2.png\"\r\n//   }\r\n// ];\r\n  \r\n// interface IState {\r\n//   showLastCard: boolean;\r\n//   showFirstCard: boolean;\r\n// }\r\n\r\n// class App extends React.Component<{}, IState> {\r\n//   constructor(props: any) {\r\n//     super(props); //Super llama al constructor de la clase que extiende\r\n//     //Y aquí debajo hago mis cosas\r\n//     this.state = {\r\n//       showFirstCard: true,\r\n//       showLastCard: true\r\n//     };\r\n//     this.clickOnButton = this.clickOnButton.bind(this);\r\n//     this.clickOnButton2 = this.clickOnButton2.bind(this);\r\n//   }\r\n\r\n//   clickOnButton() {\r\n//     this.setState({ showFirstCard: !this.state.showFirstCard });\r\n//   }\r\n//   clickOnButton2() {\r\n//     this.setState({ showLastCard: !this.state.showLastCard });\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"App\">\r\n//         <header>Mi header</header>\r\n//         {/* <Main color=\"orange\" text=\"hay texto\" />\r\n//         <Main color=\"blue\" /> */}\r\n//         <input\r\n//           className=\"btn btn-danger m-2\"\r\n//           type=\"button\"\r\n//           value=\"Hidden/Show First Card\"\r\n//           onClick={this.clickOnButton2}\r\n//         />\r\n//         <input\r\n//           className=\"btn btn-danger m-2\"\r\n//           type=\"button\"\r\n//           value=\"Hidden/Show Last Card\"\r\n//           onClick={this.clickOnButton}\r\n//         />\r\n//         <div className=\"container\">\r\n//           <div className=\"row\">\r\n//             {users.map((user, i) => {\r\n//               if (i === users.length - 1 && !this.state.showLastCard) {\r\n//                 return null;\r\n//               }\r\n//               if (i === 0 && !this.state.showFirstCard) {\r\n//                 return null;\r\n//               }\r\n//               return (\r\n//                 <CardClass\r\n//                   key={user.name}\r\n//                   imageUrl={user.imageUrl}\r\n//                   name={user.name}\r\n//                   text={user.text}\r\n//                   remove={() => {\r\n//                     if (i === 0) {\r\n//                       this.setState({ showFirstCard: false });\r\n//                     }\r\n//                     if (i === users.length - 1) {\r\n//                       this.setState({ showLastCard: false });\r\n//                     }\r\n//                   }}\r\n//                 />\r\n//               );\r\n//             })}\r\n//           </div>\r\n//         </div>\r\n        \r\n        \r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}