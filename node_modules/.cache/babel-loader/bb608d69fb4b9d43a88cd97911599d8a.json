{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A103\\\\Google Drive\\\\REACT\\\\pruebareact\\\\src\\\\App.tsx\";\nimport React from \"react\";\nimport \"./App.css\";\nimport TodoClass from \"./classComponents/TodoClass\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      texts: []\n    };\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  addTodo() {\n    const texts = this.state.texts;\n    texts.push(this.state.inputValue);\n    this.setState({\n      texts,\n      inputValue: \"\"\n    });\n  }\n\n  deleteTodo(index) {\n    const texts = this.state.texts;\n    texts.splice(index, 1);\n    this.setState({\n      texts\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputValue,\n      onChange: e => this.setState({\n        inputValue: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"ADD\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.texts.map((text, index) => React.createElement(TodoClass, {\n      key: text + index,\n      text: text,\n      delete: () => this.deleteTodo(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\A103\\Google Drive\\REACT\\pruebareact\\src\\App.tsx"],"names":["React","TodoClass","App","Component","constructor","props","state","inputValue","texts","addTodo","bind","push","setState","deleteTodo","index","splice","render","e","target","value","map","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;;AAOA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAY;AACrB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAKF,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACC;;AAEDD,EAAAA,OAAO,GAAG;AACR,UAAMD,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;AACAA,IAAAA,KAAK,CAACG,IAAN,CAAW,KAAKL,KAAL,CAAWC,UAAtB;AACA,SAAKK,QAAL,CAAc;AAACJ,MAAAA,KAAD;AAAQD,MAAAA,UAAU,EAAE;AAApB,KAAd;AACD;;AAEDM,EAAAA,UAAU,CAACC,KAAD,EAAe;AACvB,UAAMN,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;AACAA,IAAAA,KAAK,CAACO,MAAN,CAAaD,KAAb,EAAoB,CAApB;AACA,SAAKF,QAAL,CAAc;AAACJ,MAAAA;AAAD,KAAd;AACD;;AAGDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AACE,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,UADpB;AAEE,MAAA,QAAQ,EAAEU,CAAC,IAAI,KAAKL,QAAL,CAAc;AAACL,QAAAA,UAAU,EAAEU,CAAC,CAACC,MAAF,CAASC;AAAtB,OAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAQ,MAAA,OAAO,EAAE,KAAKV,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWE,KAAX,CAAiBY,GAAjB,CAAqB,CAACC,IAAD,EAAOP,KAAP,KACpB,oBAAC,SAAD;AACA,MAAA,GAAG,EAAEO,IAAI,GAAGP,KADZ;AAEA,MAAA,IAAI,EAAEO,IAFN;AAGA,MAAA,MAAM,EAAE,MAAM,KAAKR,UAAL,CAAgBC,KAAhB,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAPF,CADF;AAkBD;;AA3C2C;;AA8C9C,eAAeZ,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nimport TodoClass from \"./classComponents/TodoClass\";\n\ninterface IState {\n  texts: string[];\n  inputValue: string;\n}\n\nclass App extends React.Component<{}, IState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      texts: []\n    };\n    \n  this.addTodo = this.addTodo.bind(this);\n  }\n\n  addTodo() {\n    const texts = this.state.texts;\n    texts.push(this.state.inputValue);\n    this.setState({texts, inputValue: \"\" });\n  }\n\n  deleteTodo(index: number){\n    const texts = this.state.texts;\n    texts.splice(index, 1);\n    this.setState({texts});\n  }\n\n\n  render() {\n    return (\n      <div>\n        <input type=\"text\" \n          value={this.state.inputValue} \n          onChange={e => this.setState({inputValue: e.target.value})} \n        />\n        <button onClick={this.addTodo}>ADD</button>\n\n        <div>\n          {this.state.texts.map((text, index) => (\n            <TodoClass \n            key={text + index} \n            text={text} \n            delete={() => this.deleteTodo(index)} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}